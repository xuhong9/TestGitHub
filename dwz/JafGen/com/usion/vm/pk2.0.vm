package ${pkPkg};

import java.sql.Date;
import java.math.BigDecimal;
import java.sql.Time;
import java.sql.Timestamp ;
import com.cfcc.jaf.persistence.jaform.parent.IPK ;

/**
 * <p>Title: PK of table: ${dtoInfo.tableInfo.tablename}</p>
 * <p>Description: $!{dtoInfo.tableInfo.tableremarks} PK Object  </p>
 * <p>Copyright: Copyright (c) 2015</p>
 * <p>Company: USION </p>
 * <p>Generation Time: ${generationTime} </p>
 *  Do NOT change this file by hand.
 *  This java source file is generated by JAF_ORM .
 *
 *  pk.vm version timestamp: 2015-10-28 08:30:00
 * 
 * @author ${generator}
 */

public class ${dtoInfo.dtoName}${orm_suffix_pk} implements IPK
{
#set ($numpk = 0) 
#foreach($pk in ${dtoInfo.pks})
#set ($numpk = $numpk + 1)
#end
#if(${numpk} == 0)
	/**
	 * unvisible this class ,this table has no pk
	 */
    private ${dtoInfo.dtoName}${orm_suffix_pk} (){
	   //
    }
#end
#foreach($pk in ${dtoInfo.pks})
    /**
    *  $!{pk.column.remarks} ${pk.column.name} ${pk.column.type}  #if (${pk.column.isBPK()}), PK #end  #if (!${pk.column.isBNULL()}), NOT NULL #end  #if (${pk.column.isIdentity()}), Identity #end #if (${pk.column.isGenerated()}), Generated #end
    */
    protected ${pk.type} ${pk.name};
#end



#foreach($pk in ${dtoInfo.pks})
    /* $!{pk.column.remarks} Getter ${pk.column.name}#if (${pk.column.isBPK()}), PK#end #if (!${pk.column.isBNULL()}), NOT NULL #end #if (${pk.column.isIdentity()}), Identity #end #if (${pk.column.isGenerated()}), Generated #end*/
    public ${pk.type} ${NamingConvention.getGetterFromColumnName("${pk.column.name}")}()
    {
        return $pk.name;
    }

     /*  $!{pk.column.remarks} Setter ${pk.column.name}#if (${pk.column.isBPK()}), PK#end #if (!${pk.column.isBNULL()}), NOT NULL #end #if (${pk.column.isIdentity()}), Identity #end #if (${pk.column.isGenerated()}), Generated #end*/
    public void ${NamingConvention.getSetterFromColumnName("${pk.column.name}")}(${pk.type} _${pk.name}) {
        this.${pk.name} = _${pk.name};
    }
#end


    /* Indicates whether some other object is "equal to" this one. */
    public boolean equals(Object obj)
    {
        if (this == obj)
            return true;

        if (obj == null || !(obj instanceof ${dtoInfo.dtoName}${orm_suffix_pk}))
            return false;
#set ($count = 1)
#foreach($pk in ${dtoInfo.pks})
	#if (${pk.column.isBPK()})
      //compare field ${pk.name}
      #if($count == 1)
	${dtoInfo.dtoName}${orm_suffix_pk} bean = (${dtoInfo.dtoName}${orm_suffix_pk}) obj;
	  #end	
	if((this.${pk.name}==null && bean.${pk.name}!=null) || (this.${pk.name}!=null && bean.${pk.name}==null))
			return false;
      	else if(this.${pk.name}!=null && bean.${pk.name}!=null&&!bean.${pk.name}.equals(this.${pk.name}))
			return false;
   #end
#set ($count = $count + 1)
#end

		return true;
    }


   /* return hashCode ,if A.equals(B) that A.hashCode()==B.hashCode() */
	public int hashCode()
	{
		int __hash__ = 1;
		
#foreach($pk in ${dtoInfo.pks})

        if(this.${pk.name}!=null)
          __hash__ = __hash__ * 31+ this.${pk.name}.hashCode() ;
#end

		return __hash__;
	
	}



     /* Creates and returns a copy of this object. */
    public Object clone()
    {
    	${dtoInfo.dtoName}${orm_suffix_pk} bean =null ;
    	try {
    		bean=(${dtoInfo.dtoName}${orm_suffix_pk})super.clone();
    	} catch (CloneNotSupportedException e) {
			throw new RuntimeException(e.getMessage());
		}
		return bean;		
    }


   /* Returns a string representation of the object. */
    public String toString()
    {
        String sep = ", ";
        StringBuffer sb = new StringBuffer();
        sb.append("${dtoInfo.dtoName}${orm_suffix_pk}").append(":");
    #foreach($pk in ${dtoInfo.pks})
        sb.append("[${pk.name}]").append(" = ").append(${pk.name}).append(sep);
    #end
        return sb.toString();
    }


     /* Returns value valid checking String , NULL is Valid*/
   public String  checkValid()
  {
  	StringBuffer sb = new StringBuffer() ;

  #foreach($field in ${dtoInfo.pks})
        #if (!${field.column.isBNULL()})

        if (this.${NamingConvention.getGetterFromColumnName("${field.column.name}")}()==null)
              sb.append("$msg_cn.get("SJKBMH") ${dtoInfo.tableInfo.tablename} $msg_cn.get("ZDMH") ${field.column.name} $msg_cn.get("BNWKFH") ");
        #end
        #if (${field.type} == "String")

       if (this.${NamingConvention.getGetterFromColumnName("${field.column.name}")}()!=null)
          if (this.${NamingConvention.getGetterFromColumnName("${field.column.name}")}().getBytes().length > ${field.column.width})
             sb.append("$msg_cn.get("SJKBMH") ${dtoInfo.tableInfo.tablename} $msg_cn.get("ZDMH") ${field.column.name} $msg_cn.get("KDBNCH") "+${field.column.width});
        #end
#end
	String msg = sb.toString() ;
	if (msg.length() == 0)
		return null ;
  	return  msg;
   }

}
