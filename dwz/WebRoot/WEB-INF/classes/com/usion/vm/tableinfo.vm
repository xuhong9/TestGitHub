#################################################################
##
##               variable
##
#################################################################
#set( $DTO_NAME = "${dtoInfo.dtoName}${orm_suffix_dto}" )  ## dto name
#set( $PK_NAME  = "${dtoInfo.dtoName}${orm_suffix_pk}" )  ## pk name
#set( $INFO_NAME  = "${dtoInfo.dtoName}${orm_suffix_info}" )  ## info name


#######################################################
package ${infoPkg};

/**
 * <p>Title: Information of table: ${dtoInfo.tableInfo.tablename}</p>
 * <p>Description: $!{dtoInfo.tableInfo.tableremarks} Data Information Object </p>
 * <p>Copyright: Copyright (c) 2015</p>
 * <p>Company: USION </p>
 * <p>Generation Time: ${generationTime} </p>
 *  Do NOT change this file by hand.
 *  This java source file is generated by JAF_ORM .
 *  tableinfo.vm version timestamp: 2015-10-28 08:30:00
 *
 * @author ${generator}
 */

public class $INFO_NAME
{
	/**
	 * table name of dto
	 */
	public static String TABLENAME = "${dtoInfo.tableInfo.tablename}";
	
#foreach($field in ${dtoInfo.fields})
	/**
	 * column ${field.column.name}
	 */
	public static String ${field.column.name} ="${field.column.name}";
#end
	/**
	 * @return String table name of dto
	 */
	public static String getTableName() {
		return TABLENAME;
	}
	
	/**
    *  Columns
    */
    public static String[] columnNames(){
#set( $num = 0 )
        String[] columnNames = new String[${columnnum}];        
#foreach($field in ${dtoInfo.fields})
        columnNames[${num}]="${field.column.name}";
#set( $num = $num + 1 )
#end
        return columnNames;     
    }
	/******************************************************
	*
	*  Get Column Name
	*
	*******************************************************/
#set( $columnnum = 0 )
#foreach($field in ${dtoInfo.fields})
	/**
	 *$!{field.column.remarks} Getter ${field.column.name}#if (${field.column.isBPK()}), PK#end #if (!${field.column.isBNULL()}), NOT NULL #end #if (${field.column.isIdentity()}), Identity #end #if (${field.column.isGenerated()}), Generated #end
	 
	 */
	public static String ${NamingConvention.getGetterColumnName("${field.column.name}")}(){
		 return ${field.column.name};
	}
#set( $columnnum = $columnnum + 1 )
#end
	/******************************************************
	*
	*  Get Column Java Type
	*
	*******************************************************/
#set( $columnnum = 0 )
#foreach($field in ${dtoInfo.fields})
	/**
	 *$!{field.column.remarks} Getter ${field.column.name}#if (${field.column.isBPK()}), PK#end #if (!${field.column.isBNULL()}), NOT NULL #end #if (${field.column.isIdentity()}), Identity #end #if (${field.column.isGenerated()}), Generated #end
	 
	 */
	public static String ${NamingConvention.getGetterColumnJavaTypeName("${field.column.name}")}(){
		 return "${field.type}";
	}
#set( $columnnum = $columnnum + 1 )
#end
	/******************************************************
	*
	*  Get Column Database Type
	*
	*******************************************************/
#set( $columnnum = 0 )
#foreach($field in ${dtoInfo.fields})	
	/**
	 *$!{field.column.remarks} Getter ${field.column.name}#if (${field.column.isBPK()}), PK#end #if (!${field.column.isBNULL()}), NOT NULL #end #if (${field.column.isIdentity()}), Identity #end #if (${field.column.isGenerated()}), Generated #end
	 
	 * columnType is ${field.column.type}
	 */
	public static String ${NamingConvention.getGetterColumnDatabaseTypeName("${field.column.name}")}(){
		 return "${field.column.type}";
	}
#set( $columnnum = $columnnum + 1 )
#end
	/******************************************************
	*
	*  Get Column Width
	*
	*******************************************************/
#set( $columnnum = 0 )
#foreach($field in ${dtoInfo.fields})
#if(${field.type} == "String")
	/**
	 *$!{field.column.remarks} Column Width
	 */
	public static int ${NamingConvention.getGetterColumnWidthName("${field.column.name}")}(){
		 return ${field.column.width};
	}
	#elseif(${field.type} == "BigDecimal")
	
	/**
	 *$!{field.column.remarks} Column Width
	 */
	public static int ${NamingConvention.getGetterColumnWidthName("${field.column.name}")}(){
		 return ${field.column.width};
	}
	
	/**
	 *$!{field.column.remarks} Column Digits
	 */
	public static int ${NamingConvention.getGetterColumnDigits("${field.column.name}")}(){
		 return ${field.column.scale};
	}
#end
#set( $columnnum = $columnnum + 1 )
#end
}