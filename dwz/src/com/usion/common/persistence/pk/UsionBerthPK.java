package com.usion.common.persistence.pk;

import java.sql.Date;
import java.math.BigDecimal;
import java.sql.Time;
import java.sql.Timestamp ;
import com.cfcc.jaf.persistence.jaform.parent.IPK ;

/**
 * <p>Title: PK of table: usion_berth</p>
 * <p>Description:  PK Object  </p>
 * <p>Copyright: Copyright (c) 2015</p>
 * <p>Company: USION </p>
 * <p>Generation Time: 2015-10-28 12:37:48 </p>
 *  Do NOT change this file by hand.
 *  This java source file is generated by JAF_ORM .
 *
 *  pk.vm version timestamp: 2015-10-28 08:30:00
 * 
 * @author Administrator
 */

public class UsionBerthPK implements IPK
{
    /**
    *   ID VARCHAR  , PK   , NOT NULL        */
    protected String id;



    /*  Getter ID, PK , NOT NULL   */
    public String getId()
    {
        return id;
    }

     /*   Setter ID, PK , NOT NULL   */
    public void setId(String _id) {
        this.id = _id;
    }


    /* Indicates whether some other object is "equal to" this one. */
    public boolean equals(Object obj)
    {
        if (this == obj)
            return true;

        if (obj == null || !(obj instanceof UsionBerthPK))
            return false;
	      //compare field id
      	UsionBerthPK bean = (UsionBerthPK) obj;
	  	if((this.id==null && bean.id!=null) || (this.id!=null && bean.id==null))
			return false;
      	else if(this.id!=null && bean.id!=null&&!bean.id.equals(this.id))
			return false;
   
		return true;
    }


   /* return hashCode ,if A.equals(B) that A.hashCode()==B.hashCode() */
	public int hashCode()
	{
		int __hash__ = 1;
		

        if(this.id!=null)
          __hash__ = __hash__ * 31+ this.id.hashCode() ;

		return __hash__;
	
	}



     /* Creates and returns a copy of this object. */
    public Object clone()
    {
    	UsionBerthPK bean =null ;
    	try {
    		bean=(UsionBerthPK)super.clone();
    	} catch (CloneNotSupportedException e) {
			throw new RuntimeException(e.getMessage());
		}
		return bean;		
    }


   /* Returns a string representation of the object. */
    public String toString()
    {
        String sep = ", ";
        StringBuffer sb = new StringBuffer();
        sb.append("UsionBerthPK").append(":");
            sb.append("[id]").append(" = ").append(id).append(sep);
            return sb.toString();
    }


     /* Returns value valid checking String , NULL is Valid*/
   public String  checkValid()
  {
  	StringBuffer sb = new StringBuffer() ;

          
        if (this.getId()==null)
              sb.append("数据库表： usion_berth 字段： ID 不能为空;  ");
                
       if (this.getId()!=null)
          if (this.getId().getBytes().length > 35)
             sb.append("数据库表： usion_berth 字段： ID 宽度不能超过 "+35);
        	String msg = sb.toString() ;
	if (msg.length() == 0)
		return null ;
  	return  msg;
   }

}
